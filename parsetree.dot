digraph ParseTree {
  node [shape=box];
  node0 [label="Source"];
  node1 [label="SourceItem"];
  node2 [label="FuncDef"];
  node3 [label="FuncSignature"];
  node4 [label="myFunction"];
  node3 -> node4;
  node5 [label="ListArgDefs"];
  node6 [label="x"];
  node5 -> node6;
  node7 [label="TypeRef"];
  node8 [label="BuiltinType"];
  node9 [label="int"];
  node8 -> node9;
  node7 -> node8;
  node5 -> node7;
  node10 [label="flag2"];
  node5 -> node10;
  node11 [label="TypeRef"];
  node12 [label="CustomType"];
  node13 [label="MyType"];
  node12 -> node13;
  node11 -> node12;
  node5 -> node11;
  node14 [label="VAL32"];
  node5 -> node14;
  node15 [label="TypeRef"];
  node16 [label="ArrayType"];
  node17 [label="array"];
  node16 -> node17;
  node18 [label="BuiltinType"];
  node19 [label="string"];
  node18 -> node19;
  node16 -> node18;
  node15 -> node16;
  node5 -> node15;
  node3 -> node5;
  node20 [label="TypeRef"];
  node21 [label="BuiltinType"];
  node22 [label="uint"];
  node21 -> node22;
  node20 -> node21;
  node3 -> node20;
  node2 -> node3;
  node23 [label="BodySig"];
  node24 [label="var"];
  node23 -> node24;
  node25 [label="Vars"];
  node26 [label="ListIdentifier"];
  node27 [label="fst_val"];
  node26 -> node27;
  node28 [label="scnd_val"];
  node26 -> node28;
  node29 [label="thd_val"];
  node26 -> node29;
  node25 -> node26;
  node30 [label="BuiltinType"];
  node31 [label="long"];
  node30 -> node31;
  node25 -> node30;
  node23 -> node25;
  node32 [label="begin"];
  node23 -> node32;
  node33 [label="WhileStatement"];
  node34 [label="while"];
  node33 -> node34;
  node35 [label="Expression"];
  node36 [label=">"];
  node37 [label="fst_val"];
  node36 -> node37;
  node38 [label="Braces"];
  node39 [label="Expression"];
  node40 [label="-"];
  node41 [label="scnd_val"];
  node40 -> node41;
  node42 [label="thd_val"];
  node40 -> node42;
  node39 -> node40;
  node38 -> node39;
  node36 -> node38;
  node35 -> node36;
  node33 -> node35;
  node43 [label="do"];
  node33 -> node43;
  node44 [label="ExpressionStatement"];
  node45 [label="Expression"];
  node46 [label=":="];
  node47 [label="thd_val"];
  node46 -> node47;
  node48 [label="*"];
  node49 [label="23"];
  node48 -> node49;
  node50 [label="-"];
  node51 [label="2"];
  node50 -> node51;
  node48 -> node50;
  node46 -> node48;
  node45 -> node46;
  node44 -> node45;
  node52 [label=";"];
  node44 -> node52;
  node33 -> node44;
  node23 -> node33;
  node53 [label="ExpressionStatement"];
  node54 [label="Expression"];
  node55 [label=":="];
  node56 [label="Indexer"];
  node57 [label="myArray"];
  node56 -> node57;
  node58 [label="ListExpr"];
  node59 [label="Expression"];
  node60 [label="1"];
  node59 -> node60;
  node58 -> node59;
  node56 -> node58;
  node55 -> node56;
  node61 [label="+"];
  node62 [label="x"];
  node61 -> node62;
  node63 [label="5"];
  node61 -> node63;
  node55 -> node61;
  node54 -> node55;
  node53 -> node54;
  node64 [label=";"];
  node53 -> node64;
  node23 -> node53;
  node65 [label="IfStatement"];
  node66 [label="if"];
  node65 -> node66;
  node67 [label="Expression"];
  node68 [label="true"];
  node67 -> node68;
  node65 -> node67;
  node69 [label="then"];
  node65 -> node69;
  node70 [label="BlockStatement"];
  node71 [label="begin"];
  node70 -> node71;
  node72 [label="ExpressionStatement"];
  node73 [label="Expression"];
  node74 [label=":="];
  node75 [label="x"];
  node74 -> node75;
  node76 [label="0b01001"];
  node74 -> node76;
  node73 -> node74;
  node72 -> node73;
  node77 [label=";"];
  node72 -> node77;
  node70 -> node72;
  node78 [label="IfStatement"];
  node79 [label="if"];
  node78 -> node79;
  node80 [label="Expression"];
  node81 [label="=="];
  node82 [label="x"];
  node81 -> node82;
  node83 [label="9"];
  node81 -> node83;
  node80 -> node81;
  node78 -> node80;
  node84 [label="then"];
  node78 -> node84;
  node85 [label="ExpressionStatement"];
  node86 [label="Expression"];
  node87 [label=":="];
  node88 [label="y"];
  node87 -> node88;
  node89 [label="+"];
  node90 [label="x"];
  node89 -> node90;
  node91 [label="1"];
  node89 -> node91;
  node87 -> node89;
  node86 -> node87;
  node85 -> node86;
  node92 [label=";"];
  node85 -> node92;
  node78 -> node85;
  node70 -> node78;
  node93 [label="DoStatement"];
  node94 [label="repeat"];
  node93 -> node94;
  node95 [label="ExpressionStatement"];
  node96 [label="Expression"];
  node97 [label=":="];
  node98 [label="flag"];
  node97 -> node98;
  node99 [label="!"];
  node100 [label="flag"];
  node99 -> node100;
  node97 -> node99;
  node96 -> node97;
  node95 -> node96;
  node101 [label=";"];
  node95 -> node101;
  node93 -> node95;
  node102 [label="until"];
  node93 -> node102;
  node103 [label="Expression"];
  node104 [label="&&"];
  node105 [label="x"];
  node104 -> node105;
  node106 [label="0"];
  node104 -> node106;
  node103 -> node104;
  node93 -> node103;
  node107 [label=";"];
  node93 -> node107;
  node70 -> node93;
  node108 [label="end"];
  node70 -> node108;
  node109 [label=";"];
  node70 -> node109;
  node65 -> node70;
  node23 -> node65;
  node110 [label="end"];
  node23 -> node110;
  node111 [label=";"];
  node23 -> node111;
  node2 -> node23;
  node1 -> node2;
  node0 -> node1;
}
